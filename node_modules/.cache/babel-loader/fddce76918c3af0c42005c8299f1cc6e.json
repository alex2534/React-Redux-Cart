{"ast":null,"code":"/** @format */\nimport { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://react-http-6ff2e-default-rtdb.firebaseio.com\");\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data!\");\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Fetching cart data failed!\"\n      });\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-http-6ff2e-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/alexnascimento/Desktop/React-Redux-side-Efect/src/store/cart-actions.js"],"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"mappings":"AAAA;AAEA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAClC,SAAO,MAAOC,QAAP,IAAoB;AAC1B,UAAMC,SAAS,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC3B,sDAD2B,CAA5B;;AAGA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACjB,cAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACA;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,aAAOD,IAAP;AACA,KAXD;;AAaA,QAAI;AACH,YAAME,QAAQ,GAAG,MAAMP,SAAS,EAAhC;AACAD,MAAAA,QAAQ,CAACF,WAAW,CAACW,WAAZ,CAAwBD,QAAxB,CAAD,CAAR;AACA,KAHD,CAGE,OAAOE,KAAP,EAAc;AACfb,MAAAA,SAAS,CAACc,gBAAV,CAA2B;AAC1BC,QAAAA,MAAM,EAAE,OADkB;AAE1BC,QAAAA,KAAK,EAAE,QAFmB;AAG1BC,QAAAA,OAAO,EAAE;AAHiB,OAA3B;AAKA;AACD,GAxBD;AAyBA,CA1BM;AA4BP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AACrC,SAAO,MAAOhB,QAAP,IAAoB;AAC1BA,IAAAA,QAAQ,CACPH,SAAS,CAACc,gBAAV,CAA2B;AAC1BC,MAAAA,MAAM,EAAE,SADkB;AAE1BC,MAAAA,KAAK,EAAE,YAFmB;AAG1BC,MAAAA,OAAO,EAAE;AAHiB,KAA3B,CADO,CAAR;;AAQA,UAAMG,WAAW,GAAG,YAAY;AAC/B,YAAMf,QAAQ,GAAG,MAAMC,KAAK,CAC3B,gEAD2B,EAE3B;AACCe,QAAAA,MAAM,EAAE,KADT;AAECC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAFP,OAF2B,CAA5B;;AAQA,UAAI,CAACd,QAAQ,CAACE,EAAd,EAAkB;AACjB,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACA;AACD,KAZD;;AAaA,QAAI;AACH,YAAMY,WAAW,EAAjB;AACAjB,MAAAA,QAAQ,CACPH,SAAS,CAACc,gBAAV,CAA2B;AAC1BC,QAAAA,MAAM,EAAE,SADkB;AAE1BC,QAAAA,KAAK,EAAE,UAFmB;AAG1BC,QAAAA,OAAO,EAAE;AAHiB,OAA3B,CADO,CAAR;AAOA,KATD,CASE,OAAOJ,KAAP,EAAc;AACfV,MAAAA,QAAQ,CACPH,SAAS,CAACc,gBAAV,CAA2B;AAC1BC,QAAAA,MAAM,EAAE,OADkB;AAE1BC,QAAAA,KAAK,EAAE,QAFmB;AAG1BC,QAAAA,OAAO,EAAE;AAHiB,OAA3B,CADO,CAAR;AAOA;AACD,GAxCD;AAyCA,CA1CM","sourcesContent":["/** @format */\n\nimport { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\nexport const fetchCartData = () => {\n\treturn async (dispatch) => {\n\t\tconst fetchData = async () => {\n\t\t\tconst response = await fetch(\n\t\t\t\t\"https://react-http-6ff2e-default-rtdb.firebaseio.com\"\n\t\t\t);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(\"Could not fetch cart data!\");\n\t\t\t}\n\n\t\t\tconst data = await response.json();\n\n\t\t\treturn data;\n\t\t};\n\n\t\ttry {\n\t\t\tconst cartData = await fetchData();\n\t\t\tdispatch(cartActions.replaceCart(cartData));\n\t\t} catch (error) {\n\t\t\tuiActions.showNotification({\n\t\t\t\tstatus: \"error\",\n\t\t\t\ttitle: \"Error!\",\n\t\t\t\tmessage: \"Fetching cart data failed!\",\n\t\t\t});\n\t\t}\n\t};\n};\n\nexport const sendCartData = (cart) => {\n\treturn async (dispatch) => {\n\t\tdispatch(\n\t\t\tuiActions.showNotification({\n\t\t\t\tstatus: \"pending\",\n\t\t\t\ttitle: \"Sending...\",\n\t\t\t\tmessage: \"Sending cart data!\",\n\t\t\t})\n\t\t);\n\n\t\tconst sendRequest = async () => {\n\t\t\tconst response = await fetch(\n\t\t\t\t\"https://react-http-6ff2e-default-rtdb.firebaseio.com/cart.json\",\n\t\t\t\t{\n\t\t\t\t\tmethod: \"PUT\",\n\t\t\t\t\tbody: JSON.stringify(cart),\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(\"Sending cart data failed.\");\n\t\t\t}\n\t\t};\n\t\ttry {\n\t\t\tawait sendRequest();\n\t\t\tdispatch(\n\t\t\t\tuiActions.showNotification({\n\t\t\t\t\tstatus: \"success\",\n\t\t\t\t\ttitle: \"Success!\",\n\t\t\t\t\tmessage: \"Sent cart data successfully!\",\n\t\t\t\t})\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tdispatch(\n\t\t\t\tuiActions.showNotification({\n\t\t\t\t\tstatus: \"error\",\n\t\t\t\t\ttitle: \"Error!\",\n\t\t\t\t\tmessage: \"Sending cart data failed!\",\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}